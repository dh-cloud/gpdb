-- disable sequential scan and index scan to force bitmap scan
SET ENABLE_SEQSCAN=OFF;
SET
SET ENABLE_INDEXSCAN=OFF;
SET

-- bpchar_pattern_ops index should be invalid on master and segments
SELECT DISTINCT indisvalid FROM pg_index WHERE indexrelid = 'bpchar_idx'::regclass;
 indisvalid 
------------
 f          
(1 row)
SELECT DISTINCT indisvalid FROM gp_dist_random('pg_index') WHERE indexrelid = 'bpchar_idx'::regclass;
 indisvalid 
------------
 f          
(1 row)
REINDEX TABLE tbl_with_bpchar_pattern_ops_index;
REINDEX

-- bitmap index scan should be used
EXPLAIN (COSTS OFF) SELECT * FROM tbl_with_bpchar_pattern_ops_index WHERE lower(b)::bpchar LIKE '1';
 QUERY PLAN                                                           
----------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                             
   ->  Bitmap Heap Scan on tbl_with_bpchar_pattern_ops_index          
         Filter: ((lower((b)::text))::bpchar ~~ '1'::text)            
         ->  Bitmap Index Scan on bpchar_idx                          
               Index Cond: ((lower((b)::text))::bpchar = '1'::bpchar) 
 Optimizer: Postgres query optimizer                                  
(6 rows)
SELECT * FROM tbl_with_bpchar_pattern_ops_index WHERE lower(b)::bpchar LIKE '1';
 a  | b | c 
----+---+---
 1  | 1 | 1 
 13 | 1 | 1 
 15 | 1 | 1 
 17 | 1 | 1 
 3  | 1 | 1 
 5  | 1 | 1 
 7  | 1 | 1 
 19 | 1 | 1 
 9  | 1 | 1 
 11 | 1 | 1 
(10 rows)

-- bitmap index should be invalid
SELECT DISTINCT indisvalid FROM pg_index WHERE indexrelid = 'bitmap_idx'::regclass;
 indisvalid 
------------
 f          
(1 row)
SELECT DISTINCT indisvalid FROM gp_dist_random('pg_index') WHERE indexrelid = 'bitmap_idx'::regclass;
 indisvalid 
------------
 f          
(1 row)

-- btree index should be valid
SELECT DISTINCT indisvalid FROM pg_index WHERE indexrelid = 'btree_idx'::regclass;
 indisvalid 
------------
 t          
(1 row)
SELECT DISTINCT indisvalid FROM gp_dist_random('pg_index') WHERE indexrelid = 'btree_idx'::regclass;
 indisvalid 
------------
 t          
(1 row)

REINDEX TABLE tbl_with_bitmap_btree_indexes;
REINDEX

-- bitmap index scan should be used
EXPLAIN (COSTS OFF) SELECT * FROM tbl_with_bitmap_btree_indexes WHERE b = '1';
 QUERY PLAN                                              
---------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                
   ->  Bitmap Heap Scan on tbl_with_bitmap_btree_indexes 
         Recheck Cond: (b = 1)                           
         ->  Bitmap Index Scan on bitmap_idx             
               Index Cond: (b = 1)                       
 Optimizer: Postgres query optimizer                     
(6 rows)
SELECT * FROM tbl_with_bitmap_btree_indexes WHERE b = '1';
 a | b 
---+---
 3 | 1 
 5 | 1 
 7 | 1 
 9 | 1 
 1 | 1 
(5 rows)

-- enable btree index scan and disable bitmap index scan
SET ENABLE_BITMAPSCAN=OFF;
SET
SET ENABLE_INDEXSCAN=ON;
SET
-- btree index scan should be used
EXPLAIN (COSTS OFF) SELECT * FROM tbl_with_bitmap_btree_indexes WHERE b = '1';
 QUERY PLAN                                                         
--------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)                           
   ->  Index Scan using bitmap_idx on tbl_with_bitmap_btree_indexes 
         Index Cond: (b = 1)                                        
 Optimizer: Postgres query optimizer                                
(4 rows)
SELECT * FROM tbl_with_bitmap_btree_indexes WHERE b = '1';
 a | b 
---+---
 1 | 1 
 3 | 1 
 5 | 1 
 7 | 1 
 9 | 1 
(5 rows)

